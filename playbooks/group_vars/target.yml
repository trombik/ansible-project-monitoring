---

# __________________________________________________sudo
sudo_sudoer: |
  root ALL=(ALL) ALL
  #includedir {{ sudo_confd_dir }}

project_sudo_configs:
  - name: wheel
    content: |
      %wheel ALL=(ALL) ALL
      %sudo  ALL=(ALL) ALL

sudo_configs: "{{ project_sudo_configs + project_sudo_configs_local }}"

# __________________________________________________sensu_agent
os_sensu_go_agent_extra_packages:
  FreeBSD:
    - sysutils/sensu-go-cli
    - net-mgmt/nagios-plugins
  Debian: []
  RedHat:
  OpenBSD: []
sensu_go_agent_extra_packages: "{{ os_sensu_go_agent_extra_packages[ansible_os_family] }}"

project_agent_extra_label:
  # XXX labels does not support nested key.
  # see https://github.com/sensu/sensu-go/issues/3778
  nginx_hostname: 127.0.0.1

sensu_go_agent_config:
  backend-url: "{{ project_backend_url }}"
  trusted-ca-file: ""
  cache-dir: "{{ sensu_go_agent_cache_dir }}"
  subscriptions:
    - system
    - web_server
  labels: "{{ project_agent_label | combine(project_agent_extra_label, recursive=True) }}"
  keepalive-warning-timeout: "{{ project_sensu_go_agent_keepalive_warning_timeout }}"
  keepalive-critical-timeout: "{{ project_sensu_go_agent_keepalive_critical_timeout }}"

# __________________________________________________nginx

os_project_www_root_dir:
  FreeBSD: /usr/local/www/nginx
  Debian: /var/www/html
  OpenBSD: /var/www/htdocs
project_www_root_dir: "{{ os_project_www_root_dir[ansible_os_family] }}"

nginx_config: |
  {% if ansible_os_family == 'Debian' or ansible_os_family == 'RedHat' %}
  user {{ nginx_user }};
  pid /run/nginx.pid;
  {% endif %}
  worker_processes 1;
  error_log {{ nginx_error_log_file }};
  events {
    worker_connections 1024;
  }
  http {
    include {{ nginx_conf_dir }}/mime.types;
    access_log {{ nginx_access_log_file }};
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server {
      listen 80;
      server_name localhost;
      root {{ project_www_root_dir }};
      location / {
        index index.html;
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      }
    }
  }

# __________________________________________________monit

monit_config: |
  set daemon 10
  set httpd port 2812
    use address 127.0.0.1
    allow 127.0.0.1
  set logfile syslog facility log_daemon

project_service_command:
  nginx:
    start: "/usr/sbin/service nginx start"
    stop: "/usr/sbin/service nginx stop"

monit_rc:
  nginx:
    state: present
    content: |
      check process nginx with pidfile /var/run/nginx.pid
        start program "{{ project_service_command['nginx']['start'] }}"
        stop program "{{ project_service_command['nginx']['stop'] }}"
        every 2 cycles
        if failed port 80 protocol http then restart
