---

# __________________________________________agent
sensu_go_agent_config:
  backend-url: "{{ project_backend_url }}"
  cache-dir: "{{ sensu_go_agent_cache_dir }}"
  subscriptions:
    - system
    - proxy
  labels: "{{ project_agent_label }}"

# __________________________________________backend
os_sensu_go_backend_extra_packages:
  FreeBSD:
    - sysutils/sensu-go-cli
    - sysutils/rubygem-sensu-plugin
    - net-mgmt/nagios-plugins
    # for nagios/check_ssl_validity
    - security/p5-Crypt-X509
    - devel/p5-TimeDate
    - www/p5-libwww
    - textproc/p5-Text-Glob
  Debian:
    - sensu-go-cli
  RedHat:
    - sensu-go-cli
sensu_go_backend_extra_packages: "{{ os_sensu_go_backend_extra_packages[ansible_os_family] }}"
sensu_go_backend_ruby_plugins:
  - sensu-plugins-slack

sensu_go_backend_admin_account: admin
sensu_go_backend_admin_password: P@ssw0rd!
sensu_go_backend_config:
  state-dir: "{{ sensu_go_backend_state_dir }}"
  cache-dir: "{{ sensu_go_backend_cache_dir }}"
  log-level: debug
  agent-host: "[::]"
  api-listen-address: "[::]:8080"
  dashboard-host: "[::]"
  dashboard-port: 3000

os_sensu_go_backend_flags:
  FreeBSD: ""
  Debian: ""
  RedHat: ""
sensu_go_backend_flags: "{{ os_sensu_go_backend_flags[ansible_os_family] }}"

sensu_go_backend_entities:
  - entity:
      name: twitter.com
      entity_class: proxy
      labels:
        cert_hostname: twitter.com
        proxy_type: ssl_validity
  - entity:
      name: 8.8.8.8
      entity_class: proxy
      system:
        hostname: 8.8.8.8
        platform: unknown
      labels:
        target_host: 8.8.8.8
        query_address: google.com
        proxy_type: dig
  - entity:
      name: mx.trombik.org
      entity_class: proxy
      system:
        hostname: mx1.trombik.org
        platform: openbsd
        os: openbsd
      labels:
        target_host: a.ns.trombik.org
        query_address: trombik.org
        proxy_type: dig
  - entity:
      name: default.i.trombik.org
      entity_class: proxy
      system:
        hostname: default.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b1f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b1f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: f2f.i.trombik.org
      entity_class: proxy
      system:
        hostname: f2f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b2f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b2f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: f3f.i.trombik.org
      entity_class: proxy
      system:
        hostname: f3f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b3f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b3f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: openwrt.i.trombik.org
      entity_class: proxy
      system:
        hostname: openwrt.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http

sensu_go_backend_assets: []

sensu_go_backend_checks:
  - check:
      name: check_disk
      command: "{% raw %}{{ .labels.sensu_plugin_dir }}{% endraw %}/check-disk-usage.rb -w 70 -c 80"
      interval: 60
      publish: true
      subscriptions:
        - system
      state: present
      handlers:
        - slack

  - check:
      name: proxy_check_ssl_validity
      command: "/usr/local/libexec/nagios/check_ssl_validity -H {% raw %}{{ .labels.cert_hostname }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 600
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'ssl_validity'"
      state: present
      handlers:
        - slack

  - check:
      name: proxy_check_http
      command: "/usr/local/libexec/nagios/check_http -H {% raw %}{{ .system.hostname }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'http'"
      state: present
      handlers:
        - slack

  - check:
      name: proxy_check_dig
      command: "/usr/local/libexec/nagios/check_dig -H {% raw %}{{ .labels.target_host }}{% endraw %} --query_address={% raw %}{{ .labels.query_address }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'dig'"
      state: present
      handlers:
        - slack

  - check:
      name: check_swap
      command: "{% raw %}{{ .labels.nagios_plugin_dir }}{% endraw %}/check_swap -w 50% -c 30%"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      ttl: 600
      subscriptions:
        - system
      handlers:
        - slack
  - check:
      name: check_load
      command: "{% raw %}{{ .labels.nagios_plugin_dir }}{% endraw %}/check_load -w 1,2,3 -c 2,3,4"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      ttl: 600
      subscriptions:
        - system
      handlers:
        - slack
  - check:
      name: uptime-check
      state: absent

sensu_go_backend_config_fragments:
  - name: handler-slack.json
    content:
      slack:
        webhook_url: "https://hooks.slack.com/services/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"
        bot_name: slack-plugin
        message_template: "{{ sensu_go_backend_config_dir }}/handler-slack-message-template.erb"
        icon_emoji: ":snowman:"

sensu_go_backend_extra_config_files:
  - name: handler-slack-message-template.erb
    content: |
      ---
      Output: <%= @event["check"]["output"] %>
      Alert-Time: <%= Time.at(@event["check"]["issued"])  %>
      URL: http://172.16.100.254:3000/n/<%= @event["check"]["metadata"]["namespace"] %>/events/<%= @event["entity"]["metadata"]["name"] %>/<%= @event["check"]["metadata"]["name"] %>

sensu_go_backend_pipe_handlers:
  - pipe_handler:
      name: slack
      command: "/home/sensu/.gem/ruby/2.6/bin/handler-slack.rb --json slack --map-go-event-into-ruby"
      filters:
        - is_incident
        - not_silenced

sensu_go_backend_roles:
  - role:
      name: "{{ project_readonly_user }}"
      rules:
        - verbs:
            - list
            - get
          resources:
            - assets
            - checks
            - entities
            - events
            - filters
            - handlers
            - hooks
            - mutators
            - rolebindings
            - roles
            - searches
            - silenced

sensu_go_backend_users:
  - user:
      name: "{{ project_readonly_user }}"
      password: "{{ project_readonly_pass }}"
      groups: []

sensu_go_backend_role_bindings:
  - role_binding:
      name: "{{ project_readonly_user }}"
      role: "{{ project_readonly_user }}"
      groups: []
      users:
        - "{{ project_readonly_user }}"
