---

# __________________________________________________sudo
sudo_sudoer: |
  root ALL=(ALL) ALL
  #includedir {{ sudo_confd_dir }}

project_sudo_configs:
  - name: 200_wheel
    content: |
      %wheel ALL=(ALL) ALL
      %sudo  ALL=(ALL) ALL

sudo_configs: "{{ project_sudo_configs + project_sudo_configs_local }}"

# __________________________________________agent
project_agent_extra_label: {}
os_sensu_go_agent_extra_packages:
  FreeBSD:
    - sysutils/sensu-go-cli
    - net-mgmt/nagios-plugins
  Debian:
    - sensu-go-cli
    - libffi-dev
    - ruby-dev
  RedHat: []
  OpenBSD: []
sensu_go_agent_extra_packages: "{{ os_sensu_go_agent_extra_packages[ansible_os_family] }}"
sensu_go_agent_config:
  backend-url: "{{ project_backend_url }}"
  cache-dir: "{{ sensu_go_agent_cache_dir }}"
  trusted-ca-file: "{{ project_tls_ca_cert }}"

  subscriptions:
    - system
    - proxy
  labels: "{{ project_agent_label | combine(project_agent_extra_label, recursive=True) }}"
  keepalive-warning-timeout: "{{ project_sensu_go_agent_keepalive_warning_timeout }}"
  keepalive-critical-timeout: "{{ project_sensu_go_agent_keepalive_critical_timeout }}"

# __________________________________________backend
os_sensu_go_backend_extra_packages:
  FreeBSD:
    - sysutils/sensu-go-cli
    - sysutils/rubygem-sensu-plugin
    - net-mgmt/nagios-plugins
    # for nagios/check_ssl_validity
    - security/p5-Crypt-X509
    - devel/p5-TimeDate
    - www/p5-libwww
    - textproc/p5-Text-Glob
  Debian:
    - sensu-go-cli
    - monitoring-plugins-basic
    - monitoring-plugins-standard
    - nagios-plugins-contrib
  RedHat:
    - sensu-go-cli
sensu_go_backend_extra_packages: "{{ os_sensu_go_backend_extra_packages[ansible_os_family] }}"
sensu_go_backend_ruby_plugins:
  - sensu-plugins-slack

sensu_go_backend_admin_account: admin
sensu_go_backend_admin_password: P@ssw0rd!
project_tls_cert: "{{ cfssl_certs_dir }}/{{ ansible_fqdn }}.pem"
project_tls_key: "{{ cfssl_certs_dir }}/{{ ansible_fqdn }}-key.pem"
project_tls_ca_cert: "{{ cfssl_ca_root_dir }}/ca.pem"
project_backend_listen_url: "https://{{ project_backend_address }}"

os_project_ruby_plugin_dir:
  FreeBSD: ".gem/ruby/{{ language_ruby_version['major'] }}.{{ language_ruby_version['minor'] }}/bin"
  Debian: ".gem/ruby/{{ language_ruby_version['major'] }}.{{ language_ruby_version['minor'] }}.0/bin"
project_ruby_plugin_dir: "{{ os_project_ruby_plugin_dir[ansible_os_family] }}"

os_project_nagios_plugins_dir:
  FreeBSD: /usr/local/libexec/nagios
  Debian: /usr/lib/nagios/plugins
project_nagios_plugins_dir: "{{ os_project_nagios_plugins_dir[ansible_os_family] }}"


sensu_go_backend_environment_var:
  SENSU_URL: "{{ project_backend_listen_url }}:{{ sensu_go_backend_api_port }}"
  SENSU_USER: "{{ sensu_go_backend_admin_account }}"
  SENSU_PASSWORD: "{{ sensu_go_backend_admin_password }}"
  SENSU_CA_PATH: "{{ project_tls_ca_cert }}"

sensu_go_backend_config:
  state-dir: "{{ sensu_go_backend_state_dir }}"
  cache-dir: "{{ sensu_go_backend_cache_dir }}"
  log-level: debug
  agent-host: "[::]"
  api-listen-address: "[::]:8080"
  dashboard-host: "[::]"
  dashboard-port: 3000

  cert-file: "{{ project_tls_cert }}"
  key-file: "{{ project_tls_key }}"
  trusted-ca-file: "{{ project_tls_cert }}"
  etcd-cert-file: "{{ project_tls_cert }}"
  etcd-key-file: "{{ project_tls_key }}"
  etcd-trusted-ca-file: "{{ project_tls_ca_cert }}"
  etcd-peer-cert-file: "{{ project_tls_cert }}"
  etcd-peer-key-file: "{{ project_tls_key }}"
  etcd-peer-trusted-ca-file: "{{ project_tls_ca_cert }}"
  etcd-peer-client-cert-auth: False
  etcd-listen-client-urls: "{{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_client_port }}"
  etcd-listen-peer-urls: "{{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_peer_port }}"
  etcd-initial-advertise-peer-urls: "{{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_peer_port }}"
  etcd-initial-cluster: "default={{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_peer_port }}"
  etcd-client-cert-auth: False
  etcd-client-urls: "{{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_client_port }}"
  etcd-advertise-client-urls: "{{ project_backend_listen_url }}:{{ sensu_go_backend_etcd_client_port }}"
  insecure-skip-tls-verify: False

os_sensu_go_backend_flags:
  FreeBSD: ""
  Debian: ""
  RedHat: ""
sensu_go_backend_flags: "{{ os_sensu_go_backend_flags[ansible_os_family] }}"

sensu_go_backend_entities:
  - entity:
      name: twitter.com
      entity_class: proxy
      labels:
        cert_hostname: twitter.com
        proxy_type: ssl_validity
  - entity:
      name: 8.8.8.8
      entity_class: proxy
      system:
        hostname: 8.8.8.8
        platform: unknown
      labels:
        target_host: 8.8.8.8
        query_address: google.com
        proxy_type: dig
  - entity:
      name: mx.trombik.org
      entity_class: proxy
      system:
        hostname: mx1.trombik.org
        platform: openbsd
        os: openbsd
      labels:
        target_host: a.ns.trombik.org
        query_address: trombik.org
        proxy_type: dig
  - entity:
      name: default.i.trombik.org
      entity_class: proxy
      system:
        hostname: default.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b1f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b1f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: f2f.i.trombik.org
      entity_class: proxy
      system:
        hostname: f2f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b2f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b2f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: f3f.i.trombik.org
      entity_class: proxy
      system:
        hostname: f3f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: b3f.i.trombik.org
      entity_class: proxy
      system:
        hostname: b3f.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http
  - entity:
      name: openwrt.i.trombik.org
      entity_class: proxy
      system:
        hostname: openwrt.i.trombik.org
        platform: unknown
      labels:
        proxy_type: http

sensu_go_backend_assets: []

sensu_go_backend_checks:
  - check:
      name: check_disk
      command: "{% raw %}{{ .labels.sensu_plugin_dir }}{% endraw %}/check-disk-usage.rb -w 70 -c 80"
      interval: 60
      publish: true
      subscriptions:
        - system
      state: present
      handlers:
        - slack

  - check:
      name: proxy_check_ssl_validity
      command: "{{ project_nagios_plugins_dir }}/check_ssl_validity -H {% raw %}{{ .labels.cert_hostname }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 600
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'ssl_validity'"
      state: present
      handlers:
        - slack

  - check:
      name: check_http
      # XXX when using nested label, you need to use:
      #
      # `index .lables # 'nested,key'`
      command: '{% raw %}{{ .labels.nagios_plugin_dir }}/check_http{% endraw %} -H {% raw %}{{ index .labels "nginx_hostname" }}{% endraw %}'
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      subscriptions:
        - web_server
      state: present
      handlers:
        - slack
      check_hooks:
        critical:
          - process_tree
          - dmesg
          - syslog

  - check:
      name: proxy_check_http
      command: "{{ project_nagios_plugins_dir }}/check_http -H {% raw %}{{ .system.hostname }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'http'"
      state: present
      handlers:
        - slack

  - check:
      name: proxy_check_dig
      command: "{{ project_nagios_plugins_dir }}/check_dig -H {% raw %}{{ .labels.target_host }}{% endraw %} --query_address={% raw %}{{ .labels.query_address }}{% endraw %}"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      subscriptions:
        - proxy
      proxy_requests:
        entity_attributes:
          - "entity.entity_class == 'proxy'"
          - "entity.labels.proxy_type == 'dig'"
      state: present
      handlers:
        - slack

  - check:
      name: check_swap
      command: "{% raw %}{{ .labels.nagios_plugin_dir }}{% endraw %}/check_swap -w 50% -c 30%"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      ttl: 600
      subscriptions:
        - system
      handlers:
        - slack
  - check:
      name: check_load
      command: "{% raw %}{{ .labels.nagios_plugin_dir }}{% endraw %}/check_load -w 1,2,3 -c 2,3,4"
      output_metric_format: nagios_perfdata
      interval: 60
      publish: true
      ttl: 600
      subscriptions:
        - system
      handlers:
        - slack
  - check:
      name: uptime-check
      state: absent

sensu_go_backend_config_fragments:
  - name: handler-slack.json
    content:
      slack:
        webhook_url: "{{ project_slack_webhook_url }}"
        bot_name: slack-plugin
        message_template: "{{ sensu_go_backend_config_dir }}/handler-slack-message-template.erb"
        icon_emoji: ":snowman:"

sensu_go_backend_extra_config_files:
  - name: handler-slack-message-template.erb
    content: |
      ---
      Output: <%= @event["check"]["output"] %>
      Alert-Time: <%= Time.at(@event["check"]["issued"])  %>
      URL: http://172.16.100.254:3000/n/<%= @event["check"]["metadata"]["namespace"] %>/events/<%= @event["entity"]["metadata"]["name"] %>/<%= @event["check"]["metadata"]["name"] %>

sensu_go_backend_handler_sets:
  - handler_set:
      name: keepalive
      handlers:
        - slack

sensu_go_backend_pipe_handlers:
  - pipe_handler:
      name: slack
      command: "/home/sensu/{{ project_ruby_plugin_dir }}/handler-slack.rb --json slack --map-go-event-into-ruby"
      filters:
        - is_incident
        - not_silenced

sensu_go_backend_hooks:
  - hook:
      name: process_tree
      command: ps auxww
      timeout: 10
  - hook:
      name: dmesg
      command: 'sh -c "dmesg | tail"'
      timeout: 10
  - hook:
      name: syslog
      command: 'sh -c "grep nginx /var/log/messages | tail -n 50"'
      timeout: 10

sensu_go_backend_roles:
  - role:
      name: "{{ project_readonly_user }}"
      rules:
        - verbs:
            - list
            - get
          resources:
            - assets
            - checks
            - entities
            - events
            - filters
            - handlers
            - hooks
            - mutators
            - rolebindings
            - roles
            - searches
            - silenced

sensu_go_backend_users:
  - user:
      name: "{{ project_readonly_user }}"
      password: "{{ project_readonly_pass }}"
      groups: []

sensu_go_backend_role_bindings:
  - role_binding:
      name: "{{ project_readonly_user }}"
      role: "{{ project_readonly_user }}"
      groups: []
      users:
        - "{{ project_readonly_user }}"
# __________________________________________cfssl
cfssl_certs:
  - name: agent.i.trombik.org.json
    # Subject Alternative Name, or SAN in short
    SAN: []
    profile: agent
    owner: sensu
    json:
      CN: agent1.i.trombik.org
      hosts:
        - ""
      key:
        algo: rsa
        size: 2048
  - name: mon.i.trombik.org.json
    SAN:
      - 127.0.0.1
      - localhost
      - mon
      - 172.16.100.254
    profile: backend
    owner: sensu
    json:
      CN: mon.i.trombik.org
      hosts:
        - ""
      key:
        algo: rsa
        size: 2048

cfssl_ca_csr_config:
  CN: Root CA at i.trombik.org
  key:
    algo: rsa
    size: 2048
cfssl_ca_config:
  signing:
    default:
      expiry: 17520h
      usages:
        - signing
        - key encipherment
        - client auth
    profiles:
      backend:
        expiry: 4320h
        usages:
          - signing
          - key encipherment
          - server auth
      agent:
        expiry: 4320h
        usages:
          - signing
          - key encipherment
          - client auth
